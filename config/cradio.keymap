/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <285>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to-layer-5 {
            bindings = <&mo 5>;
            key-positions = <32 33>;
        };

        to-layer-6 {
            bindings = <&mo 6>;
            key-positions = <31 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp Q           &kp W       &kp E        &kp R        &kp T    &kp Y  &kp U        &kp I        &kp O           &kp P
&hm LEFT_GUI A  &hm S LALT  &hm D LCTRL  &hm F LSHFT  &kp G    &kp H  &hm J RSHFT  &hm K RCTRL  &hm L LEFT_ALT   &hm SEMI LGUI 
&kp Z           &kp X       &kp C        &kp V        &kp B    &kp N  &kp M        &kp COMMA    &kp PERIOD      &kp SLASH
                                         &mo 3        &mo 4    &mo 1  &mo 2
            >;
        };

        layer_1 {
            bindings = <
&trans     &trans      &trans       &trans            &trans    &trans  &trans           &trans       &trans        &trans
&hm A TAB  &hm LALT S  &hm LCTRL D  &hm LSHFT ESCAPE  &kp G     &kp H   &hm RSHFT SPACE  &hm RCTRL K  &hm L DELETE  &hm LGUI BACKSPACE
&trans     &trans      &trans       &trans            &trans    &trans  &trans           &trans       &trans        &trans
                                    &trans            &trans    &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans          &trans      &trans       &trans       &trans    &kp C_VOLUME_UP  &kp DQT         &kp SQT         &kp EQUAL   &kp PLUS
&hm A LEFT_GUI  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G     &kp LEFT         &hm RSHFT DOWN  &hm UP K        &hm L DOWN  &hm LGUI SEMI
&trans          &trans      &trans       &trans       &trans    &kp C_VOL_DN     &kp MINUS       &kp UNDERSCORE  &trans      &trans
                                         &trans       &trans    &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&trans          &kp N7       &kp N8        &kp N9    &trans    &trans  &kp F7        &kp F8        &kp F9    &trans
&hm A LEFT_GUI  &hm LALT N4  &hm LCTRL N5  &hm N6 F  &kp G     &kp H   &hm RSHFT F4  &hm RCTRL F5  &hm L F6  &hm LGUI SEMI
&trans          &kp N1       &kp N2        &kp N3    &kp N0    &trans  &kp F1        &kp F2        &kp F3    &trans
                                           &trans    &trans    &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans   &trans         &trans       &trans    &kp C_BRIGHTNESS_INC    &trans  &trans  &trans  &trans  &trans
&kp END  &kp PAGE_DOWN  &kp PAGE_UP  &kp HOME  &trans                  &trans  &trans  &trans  &trans  &trans
&trans   &trans         &trans       &trans    &kp C_BRIGHTNESS_DEC    &trans  &trans  &trans  &trans  &trans
                                     &trans    &trans                  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp PIPE       &kp BSLH  &kp GRAVE  &kp TILDE
&trans  &trans  &trans  &trans  &trans    &trans  &kp LPAR       &kp RPAR  &kp LBKT   &kp RBKT
&trans  &trans  &trans  &trans  &trans    &trans  &kp LESS_THAN  &kp GT    &kp LBRC   &kp RIGHT_BRACE
                        &trans  &trans    &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
