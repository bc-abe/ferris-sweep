/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <285>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to-4 {
            bindings = <&mo 4>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T              &kp Y                 &kp U        &kp I                     &kp O                &kp P
&kp A  &kp S  &kp D  &kp F      &kp G              &kp H                 &kp J        &kp K                     &kp L                &mt LEFT_CONTROL SEMICOLON
&kp Z  &kp X  &kp C  &kp V      &kp B              &kp N                 &kp M        &mt RG(LEFT_SHIFT) COMMA  &mt LEFT_GUI PERIOD  &mt LEFT_ALT SLASH
                     &lt 3 TAB  &lt 1 BACKSPACE    &mt LEFT_SHIFT SPACE  &lt 2 ENTER
            >;
        };

        num {
            bindings = <
&kp TILDE  &kp N7        &kp N8        &kp N9        &kp PIPE      &kp LEFT_BRACKET      &kp LEFT_PARENTHESIS  &kp PLUS   &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET
&hm TAB A  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp G         &kp LESS_THAN         &kp LEFT_BRACE        &kp MINUS  &kp RIGHT_BRACE        &kp GREATER_THAN
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0        &kp NON_US_BACKSLASH  &kp DOUBLE_QUOTES     &kp SQT    &trans                 &trans
                                       &kp ESCAPE    &kp DELETE    &trans                &trans
            >;
        };

        sym {
            bindings = <
&kp RS(INS)     &kp AMPERSAND    &kp ASTERISK  &kp MINUS   &kp UNDERSCORE       &kp C_BRI_UP   &kp DQT   &kp SQT       &kp EQUAL  &kp PLUS
&hm LEFT_GUI A  &kp DOLLAR       &kp PERCENT   &kp CARET   &kp C_VOLUME_UP      &kp LEFT       &kp DOWN  &kp UP_ARROW  &kp RIGHT  &hm LGUI SEMI
&kp C_MUTE      &kp EXCLAMATION  &kp AT_SIGN   &kp HASH    &kp C_VOLUME_DOWN    &kp C_BRI_DEC  &trans    &trans        &trans     &trans
                                               &kp ESCAPE  &kp DEL              &trans         &trans
            >;
        };

        mouse {
            bindings = <
&mkp MB1        &kp F7  &kp F8  &kp F9  &kp F12    &msc SCRL_UP    &kp PAGE_UP     &kp HOME      &trans           &trans
&hm LEFT_GUI A  &kp F4  &kp F5  &kp F6  &kp F11    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &hm LGUI SEMI
&mkp MB2        &kp F1  &kp F2  &kp F3  &kp F10    &msc SCRL_DOWN  &kp PAGE_DOWN   &kp END       &trans           &trans
                                &trans  &trans     &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                             &trans  &trans    &trans  &trans
            >;
        };
    };
};
